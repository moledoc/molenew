#!/bin/sh

# Script to post set up my environment

set -xe

user=$(who)
user=${user%% *}

printf "Insert git user: "
read git_user
printf "Insert git email: "
read git_email

git config --global user.name "$git_user"
git config --global user.email "$git_email"

printf "Cloning molecurrent repo\n"
docs="/home/$user/Documents"
mkdir -p $docs
repo_loc="$docs/molecurrent"
rm -rfv $repo_loc
# git clone https://github.com/moledoc/molecurrent.git $repo_loc
git clone https://github.com/moledoc/molenew.git $repo_loc
cd $repo_loc
git remote set-url origin git@github.com:moledoc/molecurrent.git
cd -

printf "Link configuration from repo\n"
rm -vf /home/$user/.vimrc /home/$user/.bashrc /home/$user/.profile
ln -s "$repo_loc/.vimrc" "/home/$user/.vimrc"
ln -s "$repo_loc/.bashrc" "/home/$user/.bashrc"
ln -s "$repo_loc/.profile" "/home/$user/.profile"
ln -s "$repo_loc/.git-templates" "/home/$user/.git-templates"

printf "Install external programs from .deb files\n"
install_deb(){
	doas -- dpkg -i $1
	rm -f $1
}
doas -- apt install fonts-liberation
wget --show-progress "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
install_deb "google-chrome-stable_current_amd64.deb"
wget --show-progress "https://github.com/TheAssassin/AppImageLauncher/releases/download/v2.2.0/appimagelauncher_2.2.0-travis995.0f91801.bionic_amd64.deb"
install_deb "appimagelauncher_2.2.0-travis995.0f91801.bionic_amd64.deb"
wget --show-progress "https://github.com/Dygmalab/Bazecor/releases/download/bazecor-0.3.3/Bazecor-0.3.3.AppImage"
mkdir -p /home/$user/Applications
mv Bazecor-0.3.3.AppImage /home/$user/Applications
chmod +x /home/$user/Applications/Bazecor-0.3.3.AppImage
/home/$user/Applications/Bazecor-0.3.3.AppImage&

printf "Install digidoc\n"
curl https://installer.id.ee/media/install-scripts/install-open-eid.sh > "/home/$user"/Downloads/install-open-eid.sh
sed -i 's/sudo/doas/g' /home/$user/Downloads/install-open-eid.sh
chmod +x /home/$user/Downloads/install-open-eid.sh
/home/$user/Downloads/install-open-eid.sh

printf "Install golang tools\n"
go install golang.org/x/tools/cmd/goimports@latest
go install golang.org/x/tools/cmd/godoc@latest
go install golang.org/x/lint/golint@latest

printf "generate git ssh keys\n"
mkdir -p /home/$user/.ssh
ssh-keygen -t rsa -b 4096 -C "$git_email" -f /home/$user/.ssh/git_key -P ""
xclip -selection clipboard < /home/$user/.ssh/git_key.pub
google-chrome "github.com/login"

printf "gnome keybindings\n"
dconf load /org/gnome/desktop/wm/keybindings/ < $repo_loc/gnome-keybindings
dconf load /org/gnome/terminal/legacy/keybindings/ < $repo_loc/gnome-terminal-keybindings

printf "mucomplete - a wrapper for vim's built in completion"
mkdir -p ~/.vim/pack/bundle/start
cd ~/.vim/pack/bundle/start && \
git clone --depth 1 https://github.com/lifepillar/vim-mucomplete.git

printf "Cleanup\n"
rm -v setup post-setup brick
